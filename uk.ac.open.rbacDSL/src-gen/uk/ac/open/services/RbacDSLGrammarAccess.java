/*
* generated by Xtext
*/
package uk.ac.open.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class RbacDSLGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class RbacElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Rbac");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPolicyKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cPolicyElementsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cPolicyElementsPolicyElementParserRuleCall_2_0 = (RuleCall)cPolicyElementsAssignment_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cScenariosKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cScenarioElementsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cScenarioElementsScenarioElementParserRuleCall_6_0 = (RuleCall)cScenarioElementsAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Rbac:
		//	"policy" "{" policyElements+=PolicyElement* "}" "scenarios" "{" scenarioElements+=ScenarioElement* "}";
		public ParserRule getRule() { return rule; }

		//"policy" "{" policyElements+=PolicyElement* "}" "scenarios" "{" scenarioElements+=ScenarioElement* "}"
		public Group getGroup() { return cGroup; }

		//"policy"
		public Keyword getPolicyKeyword_0() { return cPolicyKeyword_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//policyElements+=PolicyElement*
		public Assignment getPolicyElementsAssignment_2() { return cPolicyElementsAssignment_2; }

		//PolicyElement
		public RuleCall getPolicyElementsPolicyElementParserRuleCall_2_0() { return cPolicyElementsPolicyElementParserRuleCall_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }

		//"scenarios"
		public Keyword getScenariosKeyword_4() { return cScenariosKeyword_4; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }

		//scenarioElements+=ScenarioElement*
		public Assignment getScenarioElementsAssignment_6() { return cScenarioElementsAssignment_6; }

		//ScenarioElement
		public RuleCall getScenarioElementsScenarioElementParserRuleCall_6_0() { return cScenarioElementsScenarioElementParserRuleCall_6_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}

	public class PolicyElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PolicyElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cUserParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cRoleParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cPermissionParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cRBACObjectParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//PolicyElement:
		//	User | Role | Permission | RBACObject;
		public ParserRule getRule() { return rule; }

		//User | Role | Permission | RBACObject
		public Alternatives getAlternatives() { return cAlternatives; }

		//User
		public RuleCall getUserParserRuleCall_0() { return cUserParserRuleCall_0; }

		//Role
		public RuleCall getRoleParserRuleCall_1() { return cRoleParserRuleCall_1; }

		//Permission
		public RuleCall getPermissionParserRuleCall_2() { return cPermissionParserRuleCall_2; }

		//RBACObject
		public RuleCall getRBACObjectParserRuleCall_3() { return cRBACObjectParserRuleCall_3; }
	}

	public class ScenarioElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ScenarioElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cGrantedScenarioParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cForbiddenScenarioParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cUserRoleScenarioParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cObjectRoleScenarioParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cObjectScenarioParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		
		//ScenarioElement:
		//	GrantedScenario | ForbiddenScenario | UserRoleScenario | ObjectRoleScenario | ObjectScenario;
		public ParserRule getRule() { return rule; }

		//GrantedScenario | ForbiddenScenario | UserRoleScenario | ObjectRoleScenario | ObjectScenario
		public Alternatives getAlternatives() { return cAlternatives; }

		//GrantedScenario
		public RuleCall getGrantedScenarioParserRuleCall_0() { return cGrantedScenarioParserRuleCall_0; }

		//ForbiddenScenario
		public RuleCall getForbiddenScenarioParserRuleCall_1() { return cForbiddenScenarioParserRuleCall_1; }

		//UserRoleScenario
		public RuleCall getUserRoleScenarioParserRuleCall_2() { return cUserRoleScenarioParserRuleCall_2; }

		//ObjectRoleScenario
		public RuleCall getObjectRoleScenarioParserRuleCall_3() { return cObjectRoleScenarioParserRuleCall_3; }

		//ObjectScenario
		public RuleCall getObjectScenarioParserRuleCall_4() { return cObjectScenarioParserRuleCall_4; }
	}

	public class UserElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "User");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cUserKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cRoleKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cRolesAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cRolesRoleCrossReference_3_1_0 = (CrossReference)cRolesAssignment_3_1.eContents().get(0);
		private final RuleCall cRolesRoleIDTerminalRuleCall_3_1_0_1 = (RuleCall)cRolesRoleCrossReference_3_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//User:
		//	"user" name=ID "{" ("role" roles+=[Role])* "}";
		public ParserRule getRule() { return rule; }

		//"user" name=ID "{" ("role" roles+=[Role])* "}"
		public Group getGroup() { return cGroup; }

		//"user"
		public Keyword getUserKeyword_0() { return cUserKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("role" roles+=[Role])*
		public Group getGroup_3() { return cGroup_3; }

		//"role"
		public Keyword getRoleKeyword_3_0() { return cRoleKeyword_3_0; }

		//roles+=[Role]
		public Assignment getRolesAssignment_3_1() { return cRolesAssignment_3_1; }

		//[Role]
		public CrossReference getRolesRoleCrossReference_3_1_0() { return cRolesRoleCrossReference_3_1_0; }

		//ID
		public RuleCall getRolesRoleIDTerminalRuleCall_3_1_0_1() { return cRolesRoleIDTerminalRuleCall_3_1_0_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class RoleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Role");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRoleKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cExtendsKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cParentAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cParentRoleCrossReference_2_1_0 = (CrossReference)cParentAssignment_2_1.eContents().get(0);
		private final RuleCall cParentRoleIDTerminalRuleCall_2_1_0_1 = (RuleCall)cParentRoleCrossReference_2_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cSsodKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cSsodAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cSsodRoleCrossReference_4_1_0 = (CrossReference)cSsodAssignment_4_1.eContents().get(0);
		private final RuleCall cSsodRoleIDTerminalRuleCall_4_1_0_1 = (RuleCall)cSsodRoleCrossReference_4_1_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cDsodKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cDsodAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cDsodRoleCrossReference_5_1_0 = (CrossReference)cDsodAssignment_5_1.eContents().get(0);
		private final RuleCall cDsodRoleIDTerminalRuleCall_5_1_0_1 = (RuleCall)cDsodRoleCrossReference_5_1_0.eContents().get(1);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cObjectKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cAssignmentsAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cAssignmentsAssignmentParserRuleCall_6_1_0 = (RuleCall)cAssignmentsAssignment_6_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Role:
		//	"role" name=ID ("extends" parent+=[Role]*)? "{" ("ssod" ssod+=[Role])* ("dsod" dsod+=[Role])* ("object"
		//	assignments+=Assignment)* "}";
		public ParserRule getRule() { return rule; }

		//"role" name=ID ("extends" parent+=[Role]*)? "{" ("ssod" ssod+=[Role])* ("dsod" dsod+=[Role])* ("object"
		//assignments+=Assignment)* "}"
		public Group getGroup() { return cGroup; }

		//"role"
		public Keyword getRoleKeyword_0() { return cRoleKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//("extends" parent+=[Role]*)?
		public Group getGroup_2() { return cGroup_2; }

		//"extends"
		public Keyword getExtendsKeyword_2_0() { return cExtendsKeyword_2_0; }

		//parent+=[Role]*
		public Assignment getParentAssignment_2_1() { return cParentAssignment_2_1; }

		//[Role]
		public CrossReference getParentRoleCrossReference_2_1_0() { return cParentRoleCrossReference_2_1_0; }

		//ID
		public RuleCall getParentRoleIDTerminalRuleCall_2_1_0_1() { return cParentRoleIDTerminalRuleCall_2_1_0_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//("ssod" ssod+=[Role])*
		public Group getGroup_4() { return cGroup_4; }

		//"ssod"
		public Keyword getSsodKeyword_4_0() { return cSsodKeyword_4_0; }

		//ssod+=[Role]
		public Assignment getSsodAssignment_4_1() { return cSsodAssignment_4_1; }

		//[Role]
		public CrossReference getSsodRoleCrossReference_4_1_0() { return cSsodRoleCrossReference_4_1_0; }

		//ID
		public RuleCall getSsodRoleIDTerminalRuleCall_4_1_0_1() { return cSsodRoleIDTerminalRuleCall_4_1_0_1; }

		//("dsod" dsod+=[Role])*
		public Group getGroup_5() { return cGroup_5; }

		//"dsod"
		public Keyword getDsodKeyword_5_0() { return cDsodKeyword_5_0; }

		//dsod+=[Role]
		public Assignment getDsodAssignment_5_1() { return cDsodAssignment_5_1; }

		//[Role]
		public CrossReference getDsodRoleCrossReference_5_1_0() { return cDsodRoleCrossReference_5_1_0; }

		//ID
		public RuleCall getDsodRoleIDTerminalRuleCall_5_1_0_1() { return cDsodRoleIDTerminalRuleCall_5_1_0_1; }

		//("object" assignments+=Assignment)*
		public Group getGroup_6() { return cGroup_6; }

		//"object"
		public Keyword getObjectKeyword_6_0() { return cObjectKeyword_6_0; }

		//assignments+=Assignment
		public Assignment getAssignmentsAssignment_6_1() { return cAssignmentsAssignment_6_1; }

		//Assignment
		public RuleCall getAssignmentsAssignmentParserRuleCall_6_1_0() { return cAssignmentsAssignmentParserRuleCall_6_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}

	public class AssignmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Assignment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cObjectAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cObjectRBACObjectCrossReference_0_0 = (CrossReference)cObjectAssignment_0.eContents().get(0);
		private final RuleCall cObjectRBACObjectIDTerminalRuleCall_0_0_1 = (RuleCall)cObjectRBACObjectCrossReference_0_0.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cActionsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cActionsPermissionCrossReference_2_0 = (CrossReference)cActionsAssignment_2.eContents().get(0);
		private final RuleCall cActionsPermissionIDTerminalRuleCall_2_0_1 = (RuleCall)cActionsPermissionCrossReference_2_0.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Assignment:
		//	object=[RBACObject] "[" actions+=[Permission]* "]";
		public ParserRule getRule() { return rule; }

		//object=[RBACObject] "[" actions+=[Permission]* "]"
		public Group getGroup() { return cGroup; }

		//object=[RBACObject]
		public Assignment getObjectAssignment_0() { return cObjectAssignment_0; }

		//[RBACObject]
		public CrossReference getObjectRBACObjectCrossReference_0_0() { return cObjectRBACObjectCrossReference_0_0; }

		//ID
		public RuleCall getObjectRBACObjectIDTerminalRuleCall_0_0_1() { return cObjectRBACObjectIDTerminalRuleCall_0_0_1; }

		//"["
		public Keyword getLeftSquareBracketKeyword_1() { return cLeftSquareBracketKeyword_1; }

		//actions+=[Permission]*
		public Assignment getActionsAssignment_2() { return cActionsAssignment_2; }

		//[Permission]
		public CrossReference getActionsPermissionCrossReference_2_0() { return cActionsPermissionCrossReference_2_0; }

		//ID
		public RuleCall getActionsPermissionIDTerminalRuleCall_2_0_1() { return cActionsPermissionIDTerminalRuleCall_2_0_1; }

		//"]"
		public Keyword getRightSquareBracketKeyword_3() { return cRightSquareBracketKeyword_3; }
	}

	public class PermissionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Permission");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cActionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//Permission:
		//	"action" name=ID;
		public ParserRule getRule() { return rule; }

		//"action" name=ID
		public Group getGroup() { return cGroup; }

		//"action"
		public Keyword getActionKeyword_0() { return cActionKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
	}

	public class RBACObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RBACObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cObjectKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cActionKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cPermissionsAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cPermissionsPermissionCrossReference_3_1_0 = (CrossReference)cPermissionsAssignment_3_1.eContents().get(0);
		private final RuleCall cPermissionsPermissionIDTerminalRuleCall_3_1_0_1 = (RuleCall)cPermissionsPermissionCrossReference_3_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//RBACObject:
		//	"object" name=ID "{" ("action" permissions+=[Permission])* "}";
		public ParserRule getRule() { return rule; }

		//"object" name=ID "{" ("action" permissions+=[Permission])* "}"
		public Group getGroup() { return cGroup; }

		//"object"
		public Keyword getObjectKeyword_0() { return cObjectKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("action" permissions+=[Permission])*
		public Group getGroup_3() { return cGroup_3; }

		//"action"
		public Keyword getActionKeyword_3_0() { return cActionKeyword_3_0; }

		//permissions+=[Permission]
		public Assignment getPermissionsAssignment_3_1() { return cPermissionsAssignment_3_1; }

		//[Permission]
		public CrossReference getPermissionsPermissionCrossReference_3_1_0() { return cPermissionsPermissionCrossReference_3_1_0; }

		//ID
		public RuleCall getPermissionsPermissionIDTerminalRuleCall_3_1_0_1() { return cPermissionsPermissionIDTerminalRuleCall_3_1_0_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class GrantedScenarioElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "GrantedScenario");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGrantedScenarioKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cUserKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cUserAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cUserUserCrossReference_4_0 = (CrossReference)cUserAssignment_4.eContents().get(0);
		private final RuleCall cUserUserIDTerminalRuleCall_4_0_1 = (RuleCall)cUserUserCrossReference_4_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cRoleKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cRolesAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cRolesRoleCrossReference_5_1_0 = (CrossReference)cRolesAssignment_5_1.eContents().get(0);
		private final RuleCall cRolesRoleIDTerminalRuleCall_5_1_0_1 = (RuleCall)cRolesRoleCrossReference_5_1_0.eContents().get(1);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cObjectKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cObjectAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cObjectAssignmentParserRuleCall_6_1_0 = (RuleCall)cObjectAssignment_6_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//GrantedScenario:
		//	"grantedScenario" name=ID "{" "user" user=[User] ("role" roles+=[Role])* ("object" object+=Assignment)+ "}";
		public ParserRule getRule() { return rule; }

		//"grantedScenario" name=ID "{" "user" user=[User] ("role" roles+=[Role])* ("object" object+=Assignment)+ "}"
		public Group getGroup() { return cGroup; }

		//"grantedScenario"
		public Keyword getGrantedScenarioKeyword_0() { return cGrantedScenarioKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//"user"
		public Keyword getUserKeyword_3() { return cUserKeyword_3; }

		//user=[User]
		public Assignment getUserAssignment_4() { return cUserAssignment_4; }

		//[User]
		public CrossReference getUserUserCrossReference_4_0() { return cUserUserCrossReference_4_0; }

		//ID
		public RuleCall getUserUserIDTerminalRuleCall_4_0_1() { return cUserUserIDTerminalRuleCall_4_0_1; }

		//("role" roles+=[Role])*
		public Group getGroup_5() { return cGroup_5; }

		//"role"
		public Keyword getRoleKeyword_5_0() { return cRoleKeyword_5_0; }

		//roles+=[Role]
		public Assignment getRolesAssignment_5_1() { return cRolesAssignment_5_1; }

		//[Role]
		public CrossReference getRolesRoleCrossReference_5_1_0() { return cRolesRoleCrossReference_5_1_0; }

		//ID
		public RuleCall getRolesRoleIDTerminalRuleCall_5_1_0_1() { return cRolesRoleIDTerminalRuleCall_5_1_0_1; }

		//("object" object+=Assignment)+
		public Group getGroup_6() { return cGroup_6; }

		//"object"
		public Keyword getObjectKeyword_6_0() { return cObjectKeyword_6_0; }

		//object+=Assignment
		public Assignment getObjectAssignment_6_1() { return cObjectAssignment_6_1; }

		//Assignment
		public RuleCall getObjectAssignmentParserRuleCall_6_1_0() { return cObjectAssignmentParserRuleCall_6_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}

	public class ForbiddenScenarioElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ForbiddenScenario");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cForbiddenScenarioKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cUserKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cUserAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cUserUserCrossReference_4_0 = (CrossReference)cUserAssignment_4.eContents().get(0);
		private final RuleCall cUserUserIDTerminalRuleCall_4_0_1 = (RuleCall)cUserUserCrossReference_4_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cRoleKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cRolesAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cRolesRoleCrossReference_5_1_0 = (CrossReference)cRolesAssignment_5_1.eContents().get(0);
		private final RuleCall cRolesRoleIDTerminalRuleCall_5_1_0_1 = (RuleCall)cRolesRoleCrossReference_5_1_0.eContents().get(1);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cObjectKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cObjectAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cObjectAssignmentParserRuleCall_6_1_0 = (RuleCall)cObjectAssignment_6_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//ForbiddenScenario:
		//	"forbiddenScenario" name=ID "{" "user" user=[User] ("role" roles+=[Role])* ("object" object+=Assignment)+ "}";
		public ParserRule getRule() { return rule; }

		//"forbiddenScenario" name=ID "{" "user" user=[User] ("role" roles+=[Role])* ("object" object+=Assignment)+ "}"
		public Group getGroup() { return cGroup; }

		//"forbiddenScenario"
		public Keyword getForbiddenScenarioKeyword_0() { return cForbiddenScenarioKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//"user"
		public Keyword getUserKeyword_3() { return cUserKeyword_3; }

		//user=[User]
		public Assignment getUserAssignment_4() { return cUserAssignment_4; }

		//[User]
		public CrossReference getUserUserCrossReference_4_0() { return cUserUserCrossReference_4_0; }

		//ID
		public RuleCall getUserUserIDTerminalRuleCall_4_0_1() { return cUserUserIDTerminalRuleCall_4_0_1; }

		//("role" roles+=[Role])*
		public Group getGroup_5() { return cGroup_5; }

		//"role"
		public Keyword getRoleKeyword_5_0() { return cRoleKeyword_5_0; }

		//roles+=[Role]
		public Assignment getRolesAssignment_5_1() { return cRolesAssignment_5_1; }

		//[Role]
		public CrossReference getRolesRoleCrossReference_5_1_0() { return cRolesRoleCrossReference_5_1_0; }

		//ID
		public RuleCall getRolesRoleIDTerminalRuleCall_5_1_0_1() { return cRolesRoleIDTerminalRuleCall_5_1_0_1; }

		//("object" object+=Assignment)+
		public Group getGroup_6() { return cGroup_6; }

		//"object"
		public Keyword getObjectKeyword_6_0() { return cObjectKeyword_6_0; }

		//object+=Assignment
		public Assignment getObjectAssignment_6_1() { return cObjectAssignment_6_1; }

		//Assignment
		public RuleCall getObjectAssignmentParserRuleCall_6_1_0() { return cObjectAssignmentParserRuleCall_6_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}

	public class UserRoleScenarioElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UserRoleScenario");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cUserRoleScenarioKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cRoleKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cRolesAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cRolesRoleCrossReference_3_1_0 = (CrossReference)cRolesAssignment_3_1.eContents().get(0);
		private final RuleCall cRolesRoleIDTerminalRuleCall_3_1_0_1 = (RuleCall)cRolesRoleCrossReference_3_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//UserRoleScenario:
		//	"userRoleScenario" name=ID "{" ("role" roles+=[Role])+ "}";
		public ParserRule getRule() { return rule; }

		//"userRoleScenario" name=ID "{" ("role" roles+=[Role])+ "}"
		public Group getGroup() { return cGroup; }

		//"userRoleScenario"
		public Keyword getUserRoleScenarioKeyword_0() { return cUserRoleScenarioKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("role" roles+=[Role])+
		public Group getGroup_3() { return cGroup_3; }

		//"role"
		public Keyword getRoleKeyword_3_0() { return cRoleKeyword_3_0; }

		//roles+=[Role]
		public Assignment getRolesAssignment_3_1() { return cRolesAssignment_3_1; }

		//[Role]
		public CrossReference getRolesRoleCrossReference_3_1_0() { return cRolesRoleCrossReference_3_1_0; }

		//ID
		public RuleCall getRolesRoleIDTerminalRuleCall_3_1_0_1() { return cRolesRoleIDTerminalRuleCall_3_1_0_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class ObjectRoleScenarioElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ObjectRoleScenario");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cObjectRoleScenarioKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cRoleKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cRoleAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cRoleRoleCrossReference_4_0 = (CrossReference)cRoleAssignment_4.eContents().get(0);
		private final RuleCall cRoleRoleIDTerminalRuleCall_4_0_1 = (RuleCall)cRoleRoleCrossReference_4_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cObjectKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cAssignmentAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cAssignmentAssignmentParserRuleCall_5_1_0 = (RuleCall)cAssignmentAssignment_5_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//ObjectRoleScenario:
		//	"objectRoleScenario" name=ID "{" "role" role+=[Role] ("object" assignment+=Assignment)+ "}";
		public ParserRule getRule() { return rule; }

		//"objectRoleScenario" name=ID "{" "role" role+=[Role] ("object" assignment+=Assignment)+ "}"
		public Group getGroup() { return cGroup; }

		//"objectRoleScenario"
		public Keyword getObjectRoleScenarioKeyword_0() { return cObjectRoleScenarioKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//"role"
		public Keyword getRoleKeyword_3() { return cRoleKeyword_3; }

		//role+=[Role]
		public Assignment getRoleAssignment_4() { return cRoleAssignment_4; }

		//[Role]
		public CrossReference getRoleRoleCrossReference_4_0() { return cRoleRoleCrossReference_4_0; }

		//ID
		public RuleCall getRoleRoleIDTerminalRuleCall_4_0_1() { return cRoleRoleIDTerminalRuleCall_4_0_1; }

		//("object" assignment+=Assignment)+
		public Group getGroup_5() { return cGroup_5; }

		//"object"
		public Keyword getObjectKeyword_5_0() { return cObjectKeyword_5_0; }

		//assignment+=Assignment
		public Assignment getAssignmentAssignment_5_1() { return cAssignmentAssignment_5_1; }

		//Assignment
		public RuleCall getAssignmentAssignmentParserRuleCall_5_1_0() { return cAssignmentAssignmentParserRuleCall_5_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class ObjectScenarioElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ObjectScenario");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cObjectScenarioKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cObjectKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cAssignmentAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cAssignmentAssignmentParserRuleCall_3_1_0 = (RuleCall)cAssignmentAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//ObjectScenario:
		//	"objectScenario" name=ID "{" ("object" assignment+=Assignment)+ "}";
		public ParserRule getRule() { return rule; }

		//"objectScenario" name=ID "{" ("object" assignment+=Assignment)+ "}"
		public Group getGroup() { return cGroup; }

		//"objectScenario"
		public Keyword getObjectScenarioKeyword_0() { return cObjectScenarioKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("object" assignment+=Assignment)+
		public Group getGroup_3() { return cGroup_3; }

		//"object"
		public Keyword getObjectKeyword_3_0() { return cObjectKeyword_3_0; }

		//assignment+=Assignment
		public Assignment getAssignmentAssignment_3_1() { return cAssignmentAssignment_3_1; }

		//Assignment
		public RuleCall getAssignmentAssignmentParserRuleCall_3_1_0() { return cAssignmentAssignmentParserRuleCall_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	
	
	private RbacElements pRbac;
	private PolicyElementElements pPolicyElement;
	private ScenarioElementElements pScenarioElement;
	private UserElements pUser;
	private RoleElements pRole;
	private AssignmentElements pAssignment;
	private PermissionElements pPermission;
	private RBACObjectElements pRBACObject;
	private GrantedScenarioElements pGrantedScenario;
	private ForbiddenScenarioElements pForbiddenScenario;
	private UserRoleScenarioElements pUserRoleScenario;
	private ObjectRoleScenarioElements pObjectRoleScenario;
	private ObjectScenarioElements pObjectScenario;
	
	private final Grammar grammar;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public RbacDSLGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("uk.ac.open.RbacDSL".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Rbac:
	//	"policy" "{" policyElements+=PolicyElement* "}" "scenarios" "{" scenarioElements+=ScenarioElement* "}";
	public RbacElements getRbacAccess() {
		return (pRbac != null) ? pRbac : (pRbac = new RbacElements());
	}
	
	public ParserRule getRbacRule() {
		return getRbacAccess().getRule();
	}

	//PolicyElement:
	//	User | Role | Permission | RBACObject;
	public PolicyElementElements getPolicyElementAccess() {
		return (pPolicyElement != null) ? pPolicyElement : (pPolicyElement = new PolicyElementElements());
	}
	
	public ParserRule getPolicyElementRule() {
		return getPolicyElementAccess().getRule();
	}

	//ScenarioElement:
	//	GrantedScenario | ForbiddenScenario | UserRoleScenario | ObjectRoleScenario | ObjectScenario;
	public ScenarioElementElements getScenarioElementAccess() {
		return (pScenarioElement != null) ? pScenarioElement : (pScenarioElement = new ScenarioElementElements());
	}
	
	public ParserRule getScenarioElementRule() {
		return getScenarioElementAccess().getRule();
	}

	//User:
	//	"user" name=ID "{" ("role" roles+=[Role])* "}";
	public UserElements getUserAccess() {
		return (pUser != null) ? pUser : (pUser = new UserElements());
	}
	
	public ParserRule getUserRule() {
		return getUserAccess().getRule();
	}

	//Role:
	//	"role" name=ID ("extends" parent+=[Role]*)? "{" ("ssod" ssod+=[Role])* ("dsod" dsod+=[Role])* ("object"
	//	assignments+=Assignment)* "}";
	public RoleElements getRoleAccess() {
		return (pRole != null) ? pRole : (pRole = new RoleElements());
	}
	
	public ParserRule getRoleRule() {
		return getRoleAccess().getRule();
	}

	//Assignment:
	//	object=[RBACObject] "[" actions+=[Permission]* "]";
	public AssignmentElements getAssignmentAccess() {
		return (pAssignment != null) ? pAssignment : (pAssignment = new AssignmentElements());
	}
	
	public ParserRule getAssignmentRule() {
		return getAssignmentAccess().getRule();
	}

	//Permission:
	//	"action" name=ID;
	public PermissionElements getPermissionAccess() {
		return (pPermission != null) ? pPermission : (pPermission = new PermissionElements());
	}
	
	public ParserRule getPermissionRule() {
		return getPermissionAccess().getRule();
	}

	//RBACObject:
	//	"object" name=ID "{" ("action" permissions+=[Permission])* "}";
	public RBACObjectElements getRBACObjectAccess() {
		return (pRBACObject != null) ? pRBACObject : (pRBACObject = new RBACObjectElements());
	}
	
	public ParserRule getRBACObjectRule() {
		return getRBACObjectAccess().getRule();
	}

	//GrantedScenario:
	//	"grantedScenario" name=ID "{" "user" user=[User] ("role" roles+=[Role])* ("object" object+=Assignment)+ "}";
	public GrantedScenarioElements getGrantedScenarioAccess() {
		return (pGrantedScenario != null) ? pGrantedScenario : (pGrantedScenario = new GrantedScenarioElements());
	}
	
	public ParserRule getGrantedScenarioRule() {
		return getGrantedScenarioAccess().getRule();
	}

	//ForbiddenScenario:
	//	"forbiddenScenario" name=ID "{" "user" user=[User] ("role" roles+=[Role])* ("object" object+=Assignment)+ "}";
	public ForbiddenScenarioElements getForbiddenScenarioAccess() {
		return (pForbiddenScenario != null) ? pForbiddenScenario : (pForbiddenScenario = new ForbiddenScenarioElements());
	}
	
	public ParserRule getForbiddenScenarioRule() {
		return getForbiddenScenarioAccess().getRule();
	}

	//UserRoleScenario:
	//	"userRoleScenario" name=ID "{" ("role" roles+=[Role])+ "}";
	public UserRoleScenarioElements getUserRoleScenarioAccess() {
		return (pUserRoleScenario != null) ? pUserRoleScenario : (pUserRoleScenario = new UserRoleScenarioElements());
	}
	
	public ParserRule getUserRoleScenarioRule() {
		return getUserRoleScenarioAccess().getRule();
	}

	//ObjectRoleScenario:
	//	"objectRoleScenario" name=ID "{" "role" role+=[Role] ("object" assignment+=Assignment)+ "}";
	public ObjectRoleScenarioElements getObjectRoleScenarioAccess() {
		return (pObjectRoleScenario != null) ? pObjectRoleScenario : (pObjectRoleScenario = new ObjectRoleScenarioElements());
	}
	
	public ParserRule getObjectRoleScenarioRule() {
		return getObjectRoleScenarioAccess().getRule();
	}

	//ObjectScenario:
	//	"objectScenario" name=ID "{" ("object" assignment+=Assignment)+ "}";
	public ObjectScenarioElements getObjectScenarioAccess() {
		return (pObjectScenario != null) ? pObjectScenario : (pObjectScenario = new ObjectScenarioElements());
	}
	
	public ParserRule getObjectScenarioRule() {
		return getObjectScenarioAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
